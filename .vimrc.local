let g:autosave = 1
inoremap jk <esc>
inoremap kj <esc>
inoremap <c-l> () => {
set relativenumber
set cursorcolumn

nnoremap <leader>cb :Bdelete<CR>
nnoremap <leader>kb :Bwipeout<CR>
nnoremap <leader>vS :source ~/.vimrc.local<CR>

nnoremap <space><space> :noh<CR>
nnoremap <space>h <c-w>h
nnoremap <space>l <c-w>l
nnoremap <space>j <c-w>j
nnoremap <space>k <c-w>k

nnoremap <leader>i :ImportJSFix<CR>
nmapclear <

let NERDTreeShowHidden=1
let g:nerdtree_tabs_autoclose=0
let NERDTreeMirror=1
let g:NERDTreeWinSize = 35

function! s:ShowMaps()
  let old_reg = getreg("a")          " save the current content of register a
  let old_reg_type = getregtype("a") " save the type of the register as well
  try
    redir @a                           " redirect output to register a
    " Get the list of all key mappings silently, satisfy "Press ENTER to continue"
    silent map | call feedkeys("\<CR>")
    redir END                          " end output redirection
    vnew                               " new buffer in vertical window
    put a                              " put content of register
    " Sort on 4th character column which is the key(s)
    %!sort -k1.4,1.4
  finally                              " Execute even if exception is raised
    call setreg("a", old_reg, old_reg_type) " restore register a
  endtry
endfunction
com! ShowMaps call s:ShowMaps()      " Enable :ShowMaps to call the function

nnoremap <leader>M :ShowMaps<CR>            " Map keys to call the function

autocmd VimEnter * NERDTree
